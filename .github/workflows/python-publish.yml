name: Python package

on:
  push:
    branches: [ main ]
    tags: ['v*']  # Trigger on version tags (e.g., v1.0.0)
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: Setup
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel
          pip install .
  
  test:
    name: Run Tests
    runs-on: windows-latest
    needs: setup  # This job depends on the 'setup' job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel
          pip install .

      - name: Run unit tests
        run: python -m unittest discover tests

  build_and_deploy:
    name: Build and Deploy
    runs-on: windows-latest
    needs: test  # This job depends on the 'test' job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel
          pip install .

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Upload package to PyPI
        if: github.ref_type == 'tag'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
